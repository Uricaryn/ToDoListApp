@model IEnumerable<ToDoListApp1.Models.VMs.ToDoListVM>

@{
    ViewData["Title"] = "Tasks";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
<style>
    body {
        background-image: url('@Url.Content("~/images/background.jpg")');
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        color: #333; /* Daha modern bir metin rengi */
    }

    .card {
        background-color: rgba(255, 255, 255, 0.8);
        border: none;
        border-radius: 10px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .card:hover {
            transform: translateY(-10px);
        }

    .btn {
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn:hover {
            transform: scale(1.05);
        }

    .btn-flash:hover {
        animation: flash 0.5s ease-in-out infinite;
    }

    .input-group-text {
        background-color: #f8f9fa;
    }

    /* Eylemler ve butonların hizalanması için tablo hücrelerine sabit genişlik veriyoruz */
    table th, table td {
        vertical-align: middle; /* Hücrelerin ortada hizalanmasını sağlıyoruz */
    }

    .actions-column {
        width: 150px; /* Eylemler sütununun genişliği sabitleniyor */
    }

    /* Buton grubu için stil */
    .btn-group {
        display: flex;
        justify-content: center;
    }

    /* Sadece eylem butonları için boyut sabitleme */
    .btn-group .btn {
        width: 40px; /* Eylem butonlarının genişliği */
        height: 40px; /* Eylem butonlarının yüksekliği */
        padding: 0; /* İç boşluğu kaldırma */
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div class="container mt-5">
    <main role="main" class="pb-3">
        <h1 class="text-center mb-4">Tasks</h1>

        <div class="row mb-4">
            <div class="col-md-6 mx-auto">
                <a asp-action="Create" class="btn btn-success btn-lg w-100">Create New</a>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-6 mb-3">
                <form asp-action="Index" method="get">
                    <div class="input-group">
                        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control form-control-lg" placeholder="Search for tasks..." />
                        <button type="submit" class="btn btn-primary ms-2 btn-lg">Search</button>
                    </div>
                </form>
            </div>
            <div class="col-md-6 mb-3">
                <form asp-action="Index" method="get">
                    <div class="input-group">
                        @Html.DropDownList("statusFilter", new SelectList((IEnumerable<SelectListItem>)ViewData["Statuses"], "Value", "Text", ViewData["CurrentStatus"]), "All", new { @class = "form-select form-select-lg" })
                        <button type="submit" class="btn btn-primary ms-2 btn-lg">Filter by Status</button>
                    </div>
                </form>
                <div class="mt-2">
                    <a asp-action="Index" class="btn btn-secondary w-100 btn-lg">Back to List</a>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>No</th>
                                <th>@Html.ActionLink("Tasks", "Index", new { sortOrder = ViewData["TitleSortParam"] })</th>
                                <th>@Html.DisplayNameFor(model => model.Status)</th>
                                <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
                                <th>@Html.DisplayNameFor(model => model.Description)</th>
                                <th>@Html.DisplayNameFor(model => model.ReminderDate)</th>
                                <th class="actions-column text-center">Actions</th> <!-- Eylemler sütununu ortalıyoruz -->
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int say = 0;
                            }
                            @foreach (var item in Model)
                            {
                                        <tr>
                                            <td>@(++say)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                            <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                            <td>@Html.DisplayFor(modelItem => item.ReminderDate)</td>
                                            <td class="text-center">
                                                <div class="btn-group"> <!-- Buton grubu -->
                                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm mb-1 btn-flash"><i class="fas fa-edit"></i></a>
                                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm mb-1 btn-flash"><i class="fas fa-info-circle"></i></a>
                                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm btn-flash"><i class="fas fa-trash-alt"></i></a>
                                                </div>
                                            </td>
                                        </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </main>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
